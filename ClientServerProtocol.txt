Описание протокола общения сервера и клиента:

1. При запуске приложения появляется окно со списком деревьев, которое подгружается с сервера (посылается запрос на сервер и клиент получает ответ в виде JSON'a). 
	($app->get('/api/trees'...));

2. При дабл-клике на дерево в первом окне, подгружается информация о персонах с сервера. 
	($app->get('/api/trees/{id:[0-9]+}'...));

3. При изменении полей у дерева происходит put-запрос на сервер и обновляет данные в БД. 
	($app->put('/api/trees/{id:[0-9]+}...));

4. При изменении полей у персоны происходит put-запрос на сервер и обновляет данные в БД. 
	($app->put('/api/person/{id:[0-9]+}...));

5. При нажатии на кнопку "Remove tree" вызывается delete-запрос и удаляет в БД дерево и всех привязанных к нему персон. 
	($app->delete('/api/trees/{id:[0-9]+}'...));

6. При нажатии на кнопку "Remove person" вызывается delete-запрос и удаляет в БД персону и также делает запрос на обновление ячейки дерева, к которому принадлежит персона, количество персон ("count_person") в данном дереве. 
	($app->delete('/api/person/{id:[0-9]+}'...));

7. При нажатии на кнопку "Add person" вызывается post-запрос и добавляет в БД персону с уникальным индетификтором от БД, присылает ответ и на клиенте создает персону, также обновляет в БД ("count_person") в дереве, к которому привязана персона.
	($app->post('/api/person'...));

8. При нажатии на кнопку "Add person" вызывается post-запрос и добавляет в БД персону с уникальным индетификтором от БД, присылает ответ и на клиенте создает персону, также обновляет в БД ("count_person") в дереве, к которому привязана персона.
	($app->post('/api/trees'...));

9. При вводе данных в поле "Search" и нажатии Enter, происходит запрос в БД, ищет данные в таблице "Tree" поля "Title" совпадение в названии и подгружает данные в клиент, для вывода в таблице деревьев.
	($app->get('/api/trees/search/{title}');